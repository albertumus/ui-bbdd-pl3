/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InsertarElementos;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author razvanvc
 */
public final class N_Ticket extends javax.swing.JFrame {

    public static Connection conexion;

    /**
     * Creates new form E_Tienda
     */
    public N_Ticket(Connection c) {
        N_Ticket.conexion = c;
        initComponents();
        rellenarCBTrabajador();
        rellenarCBSocio();
        setIDTicket();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Info = new javax.swing.JLabel();
        lbl_id = new javax.swing.JLabel();
        tf_ID = new javax.swing.JTextField();
        btn_Modify = new javax.swing.JButton();
        btn_Exit = new javax.swing.JButton();
        lbl_nSocio2 = new javax.swing.JLabel();
        lbl_nSocio3 = new javax.swing.JLabel();
        cb_NSocio = new javax.swing.JComboBox<>();
        cb_Trabajador = new javax.swing.JComboBox<>();
        lbl_nSocio4 = new javax.swing.JLabel();
        tf_Total = new javax.swing.JTextField();
        p_Hora = new javax.swing.JPanel();
        tf_HoraH = new javax.swing.JTextField();
        tf_HoraM = new javax.swing.JTextField();
        tf_HoraS = new javax.swing.JTextField();
        lbl_Hora = new javax.swing.JLabel();
        lbl_Minuto = new javax.swing.JLabel();
        lbl_Segundo = new javax.swing.JLabel();
        lbl_Hora1 = new javax.swing.JLabel();
        p_Hora1 = new javax.swing.JPanel();
        tf_FechaD = new javax.swing.JTextField();
        tf_FechaM = new javax.swing.JTextField();
        tf_FechaA = new javax.swing.JTextField();
        lbl_Dia = new javax.swing.JLabel();
        lbl_Mes = new javax.swing.JLabel();
        lbl_Anno = new javax.swing.JLabel();
        lbl_Hora2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuevo Ticket");

        lbl_Info.setText("Rellene los siguientes campos:");

        lbl_id.setText("ID:");

        tf_ID.setEditable(false);

        btn_Modify.setText("Cambiar");
        btn_Modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ModifyActionPerformed(evt);
            }
        });

        btn_Exit.setText("Cancelar");
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });

        lbl_nSocio2.setText("Numero Socio:");

        lbl_nSocio3.setText("Trabajador:");

        cb_NSocio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un socio..." }));

        lbl_nSocio4.setText("Total:");

        tf_Total.setEditable(false);
        tf_Total.setText("0");

        lbl_Hora.setText("Hora:");

        lbl_Minuto.setText("Minuto:");

        lbl_Segundo.setText("Segundo:");

        lbl_Hora1.setText("Hora:");

        javax.swing.GroupLayout p_HoraLayout = new javax.swing.GroupLayout(p_Hora);
        p_Hora.setLayout(p_HoraLayout);
        p_HoraLayout.setHorizontalGroup(
            p_HoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_HoraLayout.createSequentialGroup()
                .addComponent(lbl_Hora1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(p_HoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_Hora, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_HoraH, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p_HoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p_HoraLayout.createSequentialGroup()
                        .addComponent(lbl_Minuto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_Segundo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_HoraLayout.createSequentialGroup()
                        .addComponent(tf_HoraM, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_HoraS, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        p_HoraLayout.setVerticalGroup(
            p_HoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_HoraLayout.createSequentialGroup()
                .addGroup(p_HoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Hora)
                    .addComponent(lbl_Minuto)
                    .addComponent(lbl_Segundo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p_HoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Hora1)
                    .addComponent(tf_HoraH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_HoraM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_HoraS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        lbl_Dia.setText("Dia:");

        lbl_Mes.setText("Mes:");

        lbl_Anno.setText("AÃ±o:");

        lbl_Hora2.setText("Fecha:");

        javax.swing.GroupLayout p_Hora1Layout = new javax.swing.GroupLayout(p_Hora1);
        p_Hora1.setLayout(p_Hora1Layout);
        p_Hora1Layout.setHorizontalGroup(
            p_Hora1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_Hora1Layout.createSequentialGroup()
                .addComponent(lbl_Hora2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(p_Hora1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_Dia, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_FechaD, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p_Hora1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p_Hora1Layout.createSequentialGroup()
                        .addComponent(lbl_Mes, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_Anno, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p_Hora1Layout.createSequentialGroup()
                        .addComponent(tf_FechaM, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_FechaA, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        p_Hora1Layout.setVerticalGroup(
            p_Hora1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_Hora1Layout.createSequentialGroup()
                .addGroup(p_Hora1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Dia)
                    .addComponent(lbl_Mes)
                    .addComponent(lbl_Anno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p_Hora1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Hora2)
                    .addComponent(tf_FechaD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_FechaM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_FechaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_Modify, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lbl_nSocio4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_nSocio3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_nSocio2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cb_Trabajador, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tf_Total, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_NSocio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(p_Hora1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbl_Info)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbl_id, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(tf_ID)
                            .addGap(9, 9, 9))
                        .addComponent(p_Hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_Info, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_id)
                    .addComponent(tf_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(p_Hora1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(p_Hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nSocio2)
                    .addComponent(cb_NSocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nSocio3)
                    .addComponent(cb_Trabajador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nSocio4)
                    .addComponent(tf_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Exit)
                    .addComponent(btn_Modify))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(379, 371));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Cierra esta ventana
     * @param evt 
     */
    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btn_ExitActionPerformed

    /**
     * Inserta los datos en la BD
     * @param evt 
     */
    private void btn_ModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ModifyActionPerformed
        // TODO add your handling code here:
        insertarDatos();
    }//GEN-LAST:event_btn_ModifyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(N_Ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new N_Ticket(conexion).setVisible(true);
            }
        });
    }

    /**
     * Valida e Inserta los datos en la BD
     */
    @SuppressWarnings({"null", "UseSpecificCatch"})
    private void insertarDatos() {

        Statement s = null;
        String numeroSocio = "null";
        if (cb_NSocio.getSelectedIndex() != 0) {
            numeroSocio = cb_NSocio.getSelectedItem().toString();
        }
        if (comprobarHora() && comprobarFecha()) {
            String fecha = setFecha();
            String hora = setHora();
            //Creamos la query
            try {
                s = conexion.createStatement();
            } catch (SQLException se) {
                System.out.println("probando conexion de consulta");
            }
            try {

                //INSERT INTO public.ticket (id_ticket, fecha, hora, numero_socio, dni_trabajador_cajero, total) VALUES (2, '2019-08-17', '20:38:59', 79, '16051022G', 233);
                s.executeUpdate("INSERT INTO public.ticket (id_ticket, fecha, hora, numero_socio, dni_trabajador_cajero, total) VALUES ('" + tf_ID.getText() + "',"
                        + " '" + fecha + "', '" + hora + "', " + numeroSocio + ", '" + cb_Trabajador.getItemAt(cb_Trabajador.getSelectedIndex()) + "', 0)");
                JOptionPane.showMessageDialog(null, "Se ha insertado correctamente", "Exito", JOptionPane.INFORMATION_MESSAGE);
                confirmacion("Â¿Deseas aÃ±adir productos en el ticket?","AÃ±adir Productos");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * Rellena CB_Trabajador segun los Cajeros que esten registrados en la BD
     */
    @SuppressWarnings("null")
    private void rellenarCBTrabajador() {
        cb_Trabajador.removeAllItems();
        ResultSet rs = null;
        Statement s = null;
        //cb_TS.addItem("Seleccione una opinion...");
        //Creamos la query
        try {
            s = conexion.createStatement();
        } catch (SQLException se) {
            System.out.println("probando conexion de consulta");
        }
        try {
            rs = s.executeQuery("SELECT * FROM cajero");
            while (rs.next()) {
                cb_Trabajador.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(N_Ticket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Rellena CB_NSocio segun los Socios que esten registrados en la BD
     */
    @SuppressWarnings("null")
    private void rellenarCBSocio() {
        cb_NSocio.removeAllItems();
        cb_NSocio.addItem("Seleccione un socio...");
        ResultSet rs = null;
        Statement s = null;
        //cb_TS.addItem("Seleccione una opinion...");
        //Creamos la query
        try {
            s = conexion.createStatement();
        } catch (SQLException se) {
            System.out.println("probando conexion de consulta");
        }
        try {
            rs = s.executeQuery("SELECT * FROM socio");
            while (rs.next()) {
                cb_NSocio.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(N_Ticket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Rellena el tf_ID segun el proximo ticket que toca en la lista
     */
    @SuppressWarnings("null")
    private void setIDTicket() {
        int id_opinion = 1;
        ResultSet rs = null;
        Statement s = null;
        //cb_TS.addItem("Seleccione una opinion...");
        //Creamos la query
        try {
            s = conexion.createStatement();
        } catch (SQLException se) {
            System.out.println("probando conexion de consulta");
        }
        try {
            rs = s.executeQuery("SELECT id_ticket FROM ticket order by  id_ticket desc LIMIT 1");
            while (rs.next()) {
                id_opinion = Integer.parseInt(rs.getString(1))+1;
            }
            tf_ID.setText(Integer.toString(id_opinion));
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

    /**
     * Comprueba si un String es un numero
     * @param num String que se desea comprobar si es un numero
     * @param Longitud Longitud especificada del numero
     * @return false si no lo es | true si lo es
     */
    @SuppressWarnings("UseSpecificCatch")
    private boolean comprobarNumero(String num, int Longitud) {
        boolean r = false;
        try {
            Integer.valueOf(num);
            r = true;
        } catch (Exception e) {
            r = false;
        }
        if (num.length() != Longitud) {
            r = false;
        }
        return r;
    }

    /**
     * Comprueba que la fecha esta en un formato correcto para la insercion en la BD
     * @return s = true si es correcto | s = false si no es correcto
     */
    private boolean comprobarFecha() {
        boolean s = false;
        if (comprobarNumero(tf_FechaA.getText(), 4) || comprobarNumero(tf_FechaM.getText(), 2) || comprobarNumero(tf_FechaD.getText(), 2)) {
            if (Integer.valueOf(tf_FechaM.getText()) < 13 && Integer.valueOf(tf_FechaM.getText()) > 0 && Integer.valueOf(tf_FechaD.getText()) > 0 && Integer.valueOf(tf_FechaD.getText()) < 31) {
                s = true;
            } else {
                JOptionPane.showMessageDialog(null, "Error en el campo Fecha, porfavor inserte datos correctos", "Error en Campo", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Error en el campo Fecha, porfavor inserte datos correctos", "Error en Campo", JOptionPane.ERROR_MESSAGE);
        }
        return s;
    }

    /**
     * Comprueba que la hora esta en un formato correcto para la insercion en la BD
     * @return s = true si es correcto | s = false si no es correcto
     */
    private boolean comprobarHora() {
        boolean s = false;
        if (comprobarNumero(tf_HoraH.getText(), 2) || comprobarNumero(tf_HoraM.getText(), 2) || comprobarNumero(tf_HoraS.getText(), 2)) {
            if (Integer.valueOf(tf_HoraH.getText()) < 25 && Integer.valueOf(tf_HoraH.getText()) > 0 && Integer.valueOf(tf_HoraM.getText()) > 0 && Integer.valueOf(tf_HoraH.getText()) < 61 && Integer.valueOf(tf_HoraS.getText()) > 0 && Integer.valueOf(tf_HoraS.getText()) < 61) {
                s = true;
            } else {
                JOptionPane.showMessageDialog(null, "Error en el campo Hora, porfavor inserte datos correctos", "Error en Campo", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Error en el campo Hora, porfavor inserte datos correctos", "Error en Campo", JOptionPane.ERROR_MESSAGE);
        }
        return s;
    }

    /**
     * Crea un JOptionPane que te hace una pregunta segun P
     * @param P Pregunta que aparece en el JOptionPane
     * @param T Titulo del JOptionPane
     */
    private void confirmacion(String P,String T) {
        int n = JOptionPane.showConfirmDialog(
                null,
                P,
                T,
                JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            N_Productos_Comprados ventana = new N_Productos_Comprados(tf_ID.getText(), conexion);
            ventana.setVisible(true);
            this.setVisible(false);
            //Abrir nueva ventana para insertar Ticket en cupon
        } else {
            this.setVisible(false);
        }
    }

    /**
     * 
     * @return La fecha en un formato correcto para su insercion en la BD
     */
    private String setFecha() {
        return tf_FechaA.getText() + "-" + tf_FechaM.getText() + "-" + tf_FechaD.getText();
    }

    /**
     * 
     * @return La hora en un formato correcto para su insercion en la BD
     */
    private String setHora() {
        return tf_HoraH.getText() + ":" + tf_HoraM.getText() + ":" + tf_HoraS.getText();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton btn_Modify;
    private javax.swing.JComboBox<String> cb_NSocio;
    private javax.swing.JComboBox<String> cb_Trabajador;
    private javax.swing.JLabel lbl_Anno;
    private javax.swing.JLabel lbl_Dia;
    private javax.swing.JLabel lbl_Hora;
    private javax.swing.JLabel lbl_Hora1;
    private javax.swing.JLabel lbl_Hora2;
    private javax.swing.JLabel lbl_Info;
    private javax.swing.JLabel lbl_Mes;
    private javax.swing.JLabel lbl_Minuto;
    private javax.swing.JLabel lbl_Segundo;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_nSocio2;
    private javax.swing.JLabel lbl_nSocio3;
    private javax.swing.JLabel lbl_nSocio4;
    private javax.swing.JPanel p_Hora;
    private javax.swing.JPanel p_Hora1;
    private javax.swing.JTextField tf_FechaA;
    private javax.swing.JTextField tf_FechaD;
    private javax.swing.JTextField tf_FechaM;
    private javax.swing.JTextField tf_HoraH;
    private javax.swing.JTextField tf_HoraM;
    private javax.swing.JTextField tf_HoraS;
    private javax.swing.JTextField tf_ID;
    private javax.swing.JTextField tf_Total;
    // End of variables declaration//GEN-END:variables
}